from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
import numpy as np

router = APIRouter()

# Expected request structure
class FilterRequest(BaseModel):
    city: str
    filters: dict  # e.g., { "bus": 5, "school": 3, ... }

@router.post("/process-filters")
def process_filters(data: FilterRequest):
    try:
        city = data.city
        filters = data.filters

        # Since the heatmap is handled by Google Maps overlay,
        # we just return a success response with the city and filters
        return {
            "status": "success",
            "city": city,
            "filters": filters,
            "message": "Filters processed successfully. Heatmap will be generated by Google Maps overlay."
        }
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.post("/update-from-sliders")
def update_from_sliders(data: FilterRequest):
    try:
        city = data.city
        filters = data.filters

        # Since the heatmap is handled by Google Maps overlay,
        # we just return a success response with the city and filters
        return {
            "status": "success",
            "city": city,
            "filters": filters,
            "message": "Filters updated successfully. Heatmap will be generated by Google Maps overlay."
        }
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))




